name: build-deploy-development

env:
  IMAGE_NAME: appflowy-cloud
  CONTAINER_NAME: appflowy-cloud
  REMOTE_DIR: /home/ubuntu/appflowy

on:
  workflow_dispatch:
  push:
    branches: main
    paths-ignore:
      - '*.md'
      - '.gitignore'
      - 'docs/'
      - 'README.md'

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          echo "${{ secrets.EC2_KEY }}" >> id_rsa
          chmod 400 id_rsa

      - name: Copy files to server
        run: |
          # Create directory and set permissions
          ssh -i id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'ENDSSH'
          sudo rm -rf ${{ env.REMOTE_DIR }}
          sudo mkdir -p ${{ env.REMOTE_DIR }}
          sudo chown -R ubuntu:ubuntu ${{ env.REMOTE_DIR }}
          ENDSSH

          # Copy project files
          scp -i id_rsa -o StrictHostKeyChecking=no -r ./* ubuntu@${{ secrets.EC2_HOST }}:${{ env.REMOTE_DIR }}/
          
          # Copy env file
          echo -e "${{ secrets.EC2_ENV }}" > .env
          scp -i id_rsa -o StrictHostKeyChecking=no .env ubuntu@${{ secrets.EC2_HOST }}:${{ env.REMOTE_DIR }}/

      - name: Deploy with rollback
        run: |
          ssh -i id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'ENDSSH'
          set -e
          cd ${{ env.REMOTE_DIR }}
          
          # Setup docker permissions
          sudo groupadd -f docker
          sudo usermod -aG docker ubuntu
          sudo chmod 666 /var/run/docker.sock
          
          # Create required directories with proper permissions
          sudo mkdir -p nginx/ssl
          sudo chown -R ubuntu:ubuntu .
          
          # Clean up existing containers and volumes
          sudo docker-compose down --remove-orphans || true
          sudo docker system prune -af || true
          
          # Build and deploy with docker-compose
          sudo docker-compose build --no-cache
          sudo docker-compose up -d
          
          # Wait for containers to start
          sleep 10
          
          # Verify deployment
          if ! sudo docker-compose ps | grep -q "Up"; then
            echo "Deployment failed, containers are not running"
            sudo docker-compose logs
            exit 1
          fi
          
          echo "Deployment successful!"
          ENDSSH

      - name: Cleanup
        if: always()
        run: |
          rm -f id_rsa
          rm -f .env